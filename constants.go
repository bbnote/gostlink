// Copyright 2020 Sebastian Lehmann. All rights reserved.
// Use of this source code is governed by a GNU-style
// license that can be found in the LICENSE file.

// this code is mainly inspired and based on the openocd project source code
// for detailed information see

// https://sourceforge.net/p/openocd/code

package gostlink

const (
	STLINK_SWIM_ERR_OK            = 0x00
	STLINK_SWIM_BUSY              = 0x01
	STLINK_DEBUG_ERR_OK           = 0x80
	STLINK_DEBUG_ERR_FAULT        = 0x81
	STLINK_SWD_AP_WAIT            = 0x10
	STLINK_SWD_AP_FAULT           = 0x11
	STLINK_SWD_AP_ERROR           = 0x12
	STLINK_SWD_AP_PARITY_ERROR    = 0x13
	STLINK_JTAG_GET_IDCODE_ERROR  = 0x09
	STLINK_JTAG_WRITE_ERROR       = 0x0c
	STLINK_JTAG_WRITE_VERIF_ERROR = 0x0d
	STLINK_SWD_DP_WAIT            = 0x14
	STLINK_SWD_DP_FAULT           = 0x15
	STLINK_SWD_DP_ERROR           = 0x16
	STLINK_SWD_DP_PARITY_ERROR    = 0x17

	STLINK_SWD_AP_WDATA_ERROR      = 0x18
	STLINK_SWD_AP_STICKY_ERROR     = 0x19
	STLINK_SWD_AP_STICKYORUN_ERROR = 0x1a

	STLINK_BAD_AP_ERROR = 0x1d

	STLINK_CORE_RUNNING      = 0x80
	STLINK_CORE_HALTED       = 0x81
	STLINK_CORE_STAT_UNKNOWN = -1
)
const (
	STLINK_SG_SIZE     = 31
	STLINK_DATA_SIZE   = 4096
	STLINK_CMD_SIZE_V2 = 16
	STLINK_CMD_SIZE_V1 = 10
	STLINK_SERIAL_LEN  = 24
)

type StLinkMode uint8

const (
	STLINK_MODE_UNKNOWN    StLinkMode = 0
	STLINK_MODE_DFU                   = 1
	STLINK_MODE_MASS                  = 2
	STLINK_MODE_DEBUG_JTAG            = 3
	STLINK_MODE_DEBUG_SWD             = 4
	STLINK_MODE_DEBUG_SWIM            = 5
)

type StLinkApiVersion uint8

const (
	STLINK_JTAG_API_V1 StLinkApiVersion = 1
	STLINK_JTAG_API_V2                  = 2
	STLINK_JTAG_API_V3                  = 3
)

const (
	STLINK_V1_PID           = 0x3744
	STLINK_V2_PID           = 0x3748
	STLINK_V2_1_PID         = 0x374B
	STLINK_V2_1_NO_MSD_PID  = 0x3752
	STLINK_V3_USBLOADER_PID = 0x374D
	STLINK_V3E_PID          = 0x374E
	STLINK_V3S_PID          = 0x374F
	STLINK_V3_2VCP_PID      = 0x3753
)

const (
	ENDPOINT_IN  = 0x80
	ENDPOINT_OUT = 0x00

	STLINK_WRITE_TIMEOUT = 1000
	STLINK_READ_TIMEOUT  = 1000

	STLINK_RX_EP    = (1 | ENDPOINT_IN)
	STLINK_TX_EP    = (2 | ENDPOINT_OUT)
	STLINK_TRACE_EP = (3 | ENDPOINT_IN)

	STLINK_V2_1_TX_EP    = (1 | ENDPOINT_OUT)
	STLINK_V2_1_TRACE_EP = (2 | ENDPOINT_IN)
)

const (
	STLINK_GET_VERSION        = 0xF1
	STLINK_DEBUG_COMMAND      = 0xF2
	STLINK_DFU_COMMAND        = 0xF3
	STLINK_SWIM_COMMAND       = 0xF4
	STLINK_GET_CURRENT_MODE   = 0xF5
	STLINK_GET_TARGET_VOLTAGE = 0xF7
)

const (
	STLINK_DEV_DFU_MODE        = 0x00
	STLINK_DEV_MASS_MODE       = 0x01
	STLINK_DEV_DEBUG_MODE      = 0x02
	STLINK_DEV_SWIM_MODE       = 0x03
	STLINK_DEV_BOOTLOADER_MODE = 0x04
	STLINK_DEV_UNKNOWN_MODE    = -1
)

const (
	STLINK_DFU_EXIT = 0x07
)

const (
	STLINK_SWIM_ENTER          = 0x00
	STLINK_SWIM_EXIT           = 0x01
	STLINK_SWIM_READ_CAP       = 0x02
	STLINK_SWIM_SPEED          = 0x03
	STLINK_SWIM_ENTER_SEQ      = 0x04
	STLINK_SWIM_GEN_RST        = 0x05
	STLINK_SWIM_RESET          = 0x06
	STLINK_SWIM_ASSERT_RESET   = 0x07
	STLINK_SWIM_DEASSERT_RESET = 0x08
	STLINK_SWIM_READSTATUS     = 0x09
	STLINK_SWIM_WRITEMEM       = 0x0a
	STLINK_SWIM_READMEM        = 0x0b
	STLINK_SWIM_READBUF        = 0x0c
)

const (
	STLINK_DEBUG_GETSTATUS           = 0x01
	STLINK_DEBUG_FORCEDEBUG          = 0x02
	STLINK_DEBUG_APIV1_RESETSYS      = 0x03
	STLINK_DEBUG_APIV1_READALLREGS   = 0x04
	STLINK_DEBUG_APIV1_READREG       = 0x05
	STLINK_DEBUG_APIV1_WRITEREG      = 0x06
	STLINK_DEBUG_READMEM_32BIT       = 0x07
	STLINK_DEBUG_WRITEMEM_32BIT      = 0x08
	STLINK_DEBUG_RUNCORE             = 0x09
	STLINK_DEBUG_STEPCORE            = 0x0a
	STLINK_DEBUG_APIV1_SETFP         = 0x0b
	STLINK_DEBUG_READMEM_8BIT        = 0x0c
	STLINK_DEBUG_WRITEMEM_8BIT       = 0x0d
	STLINK_DEBUG_APIV1_CLEARFP       = 0x0e
	STLINK_DEBUG_APIV1_WRITEDEBUGREG = 0x0f
	STLINK_DEBUG_APIV1_SETWATCHPOINT = 0x10

	STLINK_DEBUG_ENTER_JTAG_RESET    = 0x00
	STLINK_DEBUG_ENTER_SWD_NO_RESET  = 0xa3
	STLINK_DEBUG_ENTER_JTAG_NO_RESET = 0xa4

	STLINK_DEBUG_APIV1_ENTER = 0x20
	STLINK_DEBUG_EXIT        = 0x21
	STLINK_DEBUG_READCOREID  = 0x22

	STLINK_DEBUG_APIV2_ENTER         = 0x30
	STLINK_DEBUG_APIV2_READ_IDCODES  = 0x31
	STLINK_DEBUG_APIV2_RESETSYS      = 0x32
	STLINK_DEBUG_APIV2_READREG       = 0x33
	STLINK_DEBUG_APIV2_WRITEREG      = 0x34
	STLINK_DEBUG_APIV2_WRITEDEBUGREG = 0x35
	STLINK_DEBUG_APIV2_READDEBUGREG  = 0x36

	STLINK_DEBUG_APIV2_READALLREGS     = 0x3A
	STLINK_DEBUG_APIV2_GETLASTRWSTATUS = 0x3B
	STLINK_DEBUG_APIV2_DRIVE_NRST      = 0x3C

	STLINK_DEBUG_APIV2_GETLASTRWSTATUS2 = 0x3E

	STLINK_DEBUG_APIV2_START_TRACE_RX = 0x40
	STLINK_DEBUG_APIV2_STOP_TRACE_RX  = 0x41
	STLINK_DEBUG_APIV2_GET_TRACE_NB   = 0x42
	STLINK_DEBUG_APIV2_SWD_SET_FREQ   = 0x43
	STLINK_DEBUG_APIV2_JTAG_SET_FREQ  = 0x44
	STLINK_DEBUG_APIV2_READ_DAP_REG   = 0x45
	STLINK_DEBUG_APIV2_WRITE_DAP_REG  = 0x46
	STLINK_DEBUG_APIV2_READMEM_16BIT  = 0x47
	STLINK_DEBUG_APIV2_WRITEMEM_16BIT = 0x48

	STLINK_DEBUG_APIV2_INIT_AP      = 0x4B
	STLINK_DEBUG_APIV2_CLOSE_AP_DBG = 0x4C

	STLINK_APIV3_SET_COM_FREQ = 0x61
	STLINK_APIV3_GET_COM_FREQ = 0x62

	STLINK_APIV3_GET_VERSION_EX = 0xFB

	STLINK_DEBUG_APIV2_DRIVE_NRST_LOW   = 0x00
	STLINK_DEBUG_APIV2_DRIVE_NRST_HIGH  = 0x01
	STLINK_DEBUG_APIV2_DRIVE_NRST_PULSE = 0x02
)

const (
	STLINK_DEBUG_PORT_ACCESS = 0xffff
)

const (
	STLINK_TRACE_SIZE   = 4096
	STLINK_TRACE_MAX_HZ = 2000000
)

const (
	STLINK_V3_MAX_FREQ_NB = 10
)

const (
	REQUEST_SENSE        = 0x03
	REQUEST_SENSE_LENGTH = 18
)

const (
	STLINK_F_HAS_TRACE            = 0x01
	STLINK_F_HAS_SWD_SET_FREQ     = 0x02
	STLINK_F_HAS_JTAG_SET_FREQ    = 0x04
	STLINK_F_HAS_MEM_16BIT        = 0x08
	STLINK_F_HAS_GETLASTRWSTATUS2 = 0x10
	STLINK_F_HAS_DAP_REG          = 0x20
	STLINK_F_QUIRK_JTAG_DP_READ   = 0x40
	STLINK_F_HAS_AP_INIT          = 0x80
	STLINK_F_HAS_DPBANKSEL        = 0x100
	STLINK_F_HAS_RW8_512BYTES     = 0x200
	STLINK_F_FIX_CLOSE_AP         = 0x400
)

const (
	STLINK_F_HAS_TARGET_VOLT = STLINK_F_HAS_TRACE
	MAX_WAIT_RETRIES         = 8
)

/* SWD clock speed */
type speed_map struct {
	speed         int
	speed_divisor int
}

var stlink_khz_to_speed_map_swd = [...]speed_map{
	{4000, 0},
	{1800, 1}, /* default */
	{1200, 2},
	{950, 3},
	{480, 7},
	{240, 15},
	{125, 31},
	{100, 40},
	{50, 79},
	{25, 158},
	{15, 265},
	{5, 798},
}

/* JTAG clock speed */
var stlink_khz_to_speed_map_jtag = [...]speed_map{
	{9000, 4},
	{4500, 8},
	{2250, 16},
	{1125, 32}, /* default */
	{562, 64},
	{281, 128},
	{140, 256},
}

const (
	ERROR_OK   = 0
	ERROR_WAIT = -1
	ERROR_FAIL = -2
)
